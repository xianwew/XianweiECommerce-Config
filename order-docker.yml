build:
  version: "1.0"

spring:
  datasource:
    master:
      jdbc-url: jdbc:mysql://orderservice-master:3306/orderservice
      username: root
      password: wxwwxw123
      driver-class-name: com.mysql.cj.jdbc.Driver
    slave:
      jdbc-url: jdbc:mysql://orderservice-slave:3306/orderservice
      username: root
      password: wxwwx123
      driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: localhost:9092,localhost:9093,localhost:9094
    consumer:
      group-id: payment-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3
      acks: all
    listener:
      ack-mode: manual

payment:
  service:
    url: http://payment:8060/api/payment

itemservice:
  url: http://item:8040/api/item

userservice:
  url: http://user:8070/api/user

cardservice:
  url: http://user:8070/api/cards

orderservice:
  url: http://order:8050/api/orders

cartservice:
  url: http://user:8070/api/cart

keycloak:
  auth-server-url: "http://keycloak:8080"
  realm: "XianweiECommerce"
  client-id: "xianwei-ecommerce"
  client-secret: "g5HFcWL6MHBFnrAe9FO0HhlMipOHzFNZ"
  master-id: "admin-cli"
  master-secret: ""
  admin-username: "admin"
  admin-password: "admin"

order:
  message: "This is XianweiECommerce's order micro service"
  contactDetails:
    name: "Xianwei Wu - Developer"
    email: "xianwew@gamil.com"
  onCallSupport:
    xxxxxxxxxx
